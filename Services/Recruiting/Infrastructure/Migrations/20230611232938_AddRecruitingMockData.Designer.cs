// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RecruitingDbContext))]
    [Migration("20230611232938_AddRecruitingMockData")]
    partial class AddRecruitingMockData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResumeURL")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 5, 16, 17, 13, 14, 593, DateTimeKind.Unspecified).AddTicks(3333),
                            Email = "emilytaylor@gmail.com",
                            FirstName = "Emily",
                            LastName = "Taylor",
                            ResumeURL = "https://example.com/resumes/emilytaylor"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 5, 16, 17, 14, 35, 960, DateTimeKind.Unspecified),
                            Email = "michaeljohnson@gmail.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            ResumeURL = "https://example.com/resumes/michaeljohnson"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 5, 17, 1, 41, 50, 743, DateTimeKind.Unspecified).AddTicks(3333),
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            ResumeURL = "resume_url_1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 5, 18, 9, 25, 0, 123, DateTimeKind.Unspecified).AddTicks(4567),
                            Email = "sarah.williams@example.com",
                            FirstName = "Sarah",
                            LastName = "Williams",
                            ResumeURL = "https://example.com/resumes/sarahwilliams"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2023, 5, 19, 14, 30, 45, 987, DateTimeKind.Unspecified).AddTicks(6543),
                            Email = "david.wilson@example.com",
                            FirstName = "David",
                            LastName = "Wilson",
                            ResumeURL = "resume_url_2"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2023, 5, 20, 18, 45, 12, 345, DateTimeKind.Unspecified).AddTicks(6789),
                            Email = "emma.brown@example.com",
                            FirstName = "Emma",
                            LastName = "Brown",
                            ResumeURL = "https://example.com/resumes/emmabrown"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2023, 5, 31, 16, 55, 0, 0, DateTimeKind.Utc),
                            Email = "danielmiller@example.com",
                            FirstName = "Daniel",
                            LastName = "Miller",
                            ResumeURL = "https://example.com/resumes/danielmiller.pdf"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2023, 5, 31, 17, 10, 0, 0, DateTimeKind.Utc),
                            Email = "oliviaanderson@example.com",
                            FirstName = "Olivia",
                            LastName = "Anderson",
                            ResumeURL = "https://example.com/resumes/oliviaanderson.pdf"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2023, 5, 31, 19, 35, 0, 0, DateTimeKind.Utc),
                            Email = "sophiaclark@example.com",
                            FirstName = "Sophia",
                            LastName = "Clark",
                            ResumeURL = "https://example.com/resumes/sophiaclark.pdf"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2023, 5, 31, 21, 5, 0, 0, DateTimeKind.Utc),
                            Email = "avahill@example.com",
                            FirstName = "Ava",
                            LastName = "Hill",
                            ResumeURL = "https://example.com/resumes/avahill.pdf"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2023, 5, 31, 22, 20, 0, 0, DateTimeKind.Utc),
                            Email = "christophergonzalez@example.com",
                            FirstName = "Christopher",
                            LastName = "Gonzalez",
                            ResumeURL = "https://example.com/resumes/christophergonzalez.pdf"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClosedReason")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("JobStatusLookUpId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPositions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("JobStatusLookUpId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 5, 10, 1, 53, 36, 833, DateTimeKind.Unspecified).AddTicks(5340),
                            Description = "Need to be good with C#",
                            IsActive = true,
                            JobCode = new Guid("9a8b615e-5ba5-4211-84a0-c8c4998549a1"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 2,
                            StartDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = ".NET Developer"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 5, 10, 15, 25, 39, 32, DateTimeKind.Unspecified).AddTicks(1810),
                            Description = "Need to be good with Java",
                            IsActive = true,
                            JobCode = new Guid("f45e3dc6-7c56-4f6d-b74a-3d53c7f9dc60"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 4,
                            StartDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Java Developer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 5, 14, 1, 53, 36, 833, DateTimeKind.Unspecified).AddTicks(5340),
                            Description = "Good with C#",
                            IsActive = true,
                            JobCode = new Guid("aebb8a82-734b-4b47-9475-64e127e1f4a0"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 4,
                            StartDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "C# Dev"
                        },
                        new
                        {
                            Id = 1003,
                            CreatedOn = new DateTime(2023, 5, 14, 19, 25, 39, 32, DateTimeKind.Unspecified).AddTicks(1810),
                            Description = "Good with Azure",
                            IsActive = true,
                            JobCode = new Guid("d67e8644-8a29-40a1-9d6f-1eae6cc7b29a"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 5,
                            StartDate = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Azure Developer"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 5, 15, 16, 55, 18, 473, DateTimeKind.Unspecified).AddTicks(9500),
                            Description = "Looking for a skilled frontend developer with experience in HTML, CSS, and JavaScript.",
                            IsActive = true,
                            JobCode = new Guid("b2d06b8e-9e15-4d13-a22e-f07c5e3f52cc"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 3,
                            StartDate = new DateTime(2023, 6, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Frontend Developer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2023, 5, 30, 13, 45, 0, 0, DateTimeKind.Utc),
                            Description = "Develop and maintain software applications.",
                            IsActive = true,
                            JobCode = new Guid("a6b8a2f4-8eae-4a82-9e99-3a3fd4960011"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 10,
                            StartDate = new DateTime(2023, 6, 15, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Software Developer"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2023, 5, 28, 10, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Promote and sell products to customers.",
                            IsActive = true,
                            JobCode = new Guid("03d19b10-579f-4b45-9461-8c7d1d06f092"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 2,
                            StartDate = new DateTime(2023, 7, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Sales Representative"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2023, 5, 25, 16, 20, 0, 0, DateTimeKind.Utc),
                            Description = "Analyze and interpret complex data sets.",
                            IsActive = true,
                            JobCode = new Guid("e9e8192a-84c5-4a8a-940e-2e9793817d4f"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 5,
                            StartDate = new DateTime(2023, 6, 20, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Data Analyst"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2023, 5, 23, 9, 15, 0, 0, DateTimeKind.Utc),
                            Description = "Create visually appealing designs for marketing materials.",
                            IsActive = true,
                            JobCode = new Guid("c0571f0b-0e47-4181-89f6-82e3ae6a86c1"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 3,
                            StartDate = new DateTime(2023, 6, 25, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Graphic Designer"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2023, 5, 19, 3, 28, 0, 0, DateTimeKind.Utc),
                            Description = "Develop and implement marketing strategies.",
                            IsActive = true,
                            JobCode = new Guid("f03e9879-6ab1-4e4d-9ff9-81a9a5c218b8"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 2,
                            StartDate = new DateTime(2023, 7, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Marketing Manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2023, 5, 12, 13, 15, 0, 0, DateTimeKind.Utc),
                            Description = "Lead and oversee project planning and execution.",
                            IsActive = true,
                            JobCode = new Guid("7815d102-24d1-45fe-8b32-3e0e0d97e317"),
                            JobStatusLookUpId = 1,
                            NumberOfPositions = 8,
                            StartDate = new DateTime(2023, 7, 12, 9, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Project Manager"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.JobStatusLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JobStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobStatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobStatusLookUps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JobStatusCode = "Open",
                            JobStatusDescription = "Job is Open"
                        },
                        new
                        {
                            Id = 2,
                            JobStatusCode = "Pending",
                            JobStatusDescription = "Job is Pending"
                        },
                        new
                        {
                            Id = 3,
                            JobStatusCode = "Closed",
                            JobStatusDescription = "Job is Closed"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RejectedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SelectedForInterview")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CandidateId = 1,
                            JobId = 1,
                            SubmittedOn = new DateTime(2023, 5, 20, 9, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CandidateId = 2,
                            JobId = 2,
                            SubmittedOn = new DateTime(2023, 5, 21, 10, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CandidateId = 3,
                            JobId = 3,
                            SubmittedOn = new DateTime(2023, 5, 22, 14, 15, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CandidateId = 4,
                            JobId = 1003,
                            SubmittedOn = new DateTime(2023, 5, 23, 16, 45, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CandidateId = 5,
                            JobId = 5,
                            SubmittedOn = new DateTime(2023, 5, 24, 11, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CandidateId = 6,
                            JobId = 6,
                            SubmittedOn = new DateTime(2023, 5, 25, 9, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CandidateId = 7,
                            JobId = 7,
                            SubmittedOn = new DateTime(2023, 5, 26, 13, 20, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CandidateId = 8,
                            JobId = 8,
                            SubmittedOn = new DateTime(2023, 5, 27, 10, 10, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Job", b =>
                {
                    b.HasOne("ApplicationCore.Entities.JobStatusLookUp", "JobStatusLookUp")
                        .WithMany()
                        .HasForeignKey("JobStatusLookUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobStatusLookUp");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Submission", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Candidate", "Candidate")
                        .WithMany("Submissions")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Candidate", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
