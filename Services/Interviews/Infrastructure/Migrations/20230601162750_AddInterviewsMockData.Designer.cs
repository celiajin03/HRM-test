// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(InterviewsDbContext))]
    [Migration("20230601162750_AddInterviewsMockData")]
    partial class AddInterviewsMockData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CandidateEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CandidateIdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CandidateLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewTypeId")
                        .HasColumnType("int");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<bool?>("Passed")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateIdentityId")
                        .IsUnique();

                    b.HasIndex("InterviewTypeId");

                    b.HasIndex("InterviewerId");

                    b.ToTable("Interviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeginTime = new DateTime(2023, 5, 16, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "emilytaylor@gmail.com",
                            CandidateFirstName = "Emily",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CandidateLastName = "Taylor",
                            EndTime = new DateTime(2023, 5, 16, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Feedback = "Good communication skills",
                            InterviewTypeId = 1,
                            InterviewerId = 1,
                            Passed = true,
                            Rating = 4,
                            SubmissionId = 1
                        },
                        new
                        {
                            Id = 2,
                            BeginTime = new DateTime(2023, 5, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "michaeljohnson@gmail.com",
                            CandidateFirstName = "Michael",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000002"),
                            CandidateLastName = "Johnson",
                            EndTime = new DateTime(2023, 5, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Feedback = "Strong technical skills",
                            InterviewTypeId = 2,
                            InterviewerId = 2,
                            Passed = true,
                            Rating = 5,
                            SubmissionId = 2
                        },
                        new
                        {
                            Id = 3,
                            BeginTime = new DateTime(2023, 5, 18, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "john.smith@example.com",
                            CandidateFirstName = "John",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000003"),
                            CandidateLastName = "Smith",
                            EndTime = new DateTime(2023, 5, 18, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Feedback = "Struggled to articulate their thoughts coherently",
                            InterviewTypeId = 3,
                            InterviewerId = 3,
                            Passed = false,
                            Rating = 2,
                            SubmissionId = 3
                        },
                        new
                        {
                            Id = 4,
                            BeginTime = new DateTime(2023, 5, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "sarah.williams@example.com",
                            CandidateFirstName = "Sarah",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000004"),
                            CandidateLastName = "Williams",
                            EndTime = new DateTime(2023, 5, 19, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            InterviewTypeId = 4,
                            InterviewerId = 4,
                            SubmissionId = 4
                        },
                        new
                        {
                            Id = 5,
                            BeginTime = new DateTime(2023, 5, 20, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "david.wilson@example.com",
                            CandidateFirstName = "David",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000005"),
                            CandidateLastName = "Wilson",
                            EndTime = new DateTime(2023, 5, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            InterviewTypeId = 5,
                            InterviewerId = 5,
                            SubmissionId = 5
                        },
                        new
                        {
                            Id = 6,
                            BeginTime = new DateTime(2023, 5, 21, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "emma.brown@example.com",
                            CandidateFirstName = "Emma",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000006"),
                            CandidateLastName = "Brown",
                            EndTime = new DateTime(2023, 5, 21, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            InterviewTypeId = 6,
                            InterviewerId = 6,
                            SubmissionId = 6
                        },
                        new
                        {
                            Id = 7,
                            BeginTime = new DateTime(2023, 5, 31, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "danielmiller@example.com",
                            CandidateFirstName = "Daniel",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000007"),
                            CandidateLastName = "Miller",
                            EndTime = new DateTime(2023, 5, 31, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            InterviewTypeId = 1,
                            InterviewerId = 7,
                            SubmissionId = 7
                        },
                        new
                        {
                            Id = 8,
                            BeginTime = new DateTime(2023, 5, 31, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidateEmail = "oliviaanderson@example.com",
                            CandidateFirstName = "Olivia",
                            CandidateIdentityId = new Guid("00000000-0000-0000-0000-000000000008"),
                            CandidateLastName = "Anderson",
                            EndTime = new DateTime(2023, 5, 31, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            InterviewTypeId = 2,
                            InterviewerId = 8,
                            SubmissionId = 8
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.InterviewTypeLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InterviewTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InterviewTypeDescription")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("InterviewTypeLookUps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterviewTypeCode = "P",
                            InterviewTypeDescription = "Phone Screen"
                        },
                        new
                        {
                            Id = 2,
                            InterviewTypeCode = "T",
                            InterviewTypeDescription = "Technical Interview"
                        },
                        new
                        {
                            Id = 3,
                            InterviewTypeCode = "B",
                            InterviewTypeDescription = "Behavioral Interview"
                        },
                        new
                        {
                            Id = 4,
                            InterviewTypeCode = "C",
                            InterviewTypeDescription = "Case Interview"
                        },
                        new
                        {
                            Id = 5,
                            InterviewTypeCode = "S",
                            InterviewTypeDescription = "Stress Interview"
                        },
                        new
                        {
                            Id = 6,
                            InterviewTypeCode = "O",
                            InterviewTypeDescription = "On-site Interview"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Interviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeIdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIdentityId")
                        .IsUnique();

                    b.ToTable("Interviewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "aries.mu@GoldSaints.com",
                            EmployeeIdentityId = "49d65189-9d93-4ba0-9a2e-6cd349a86c6a",
                            FirstName = "Aries",
                            LastName = "Mu"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Taurus.Aldebaran@GoldSaints.com",
                            EmployeeIdentityId = "14467328-f534-4ad3-9eb7-614d33b2814a",
                            FirstName = "Taurus",
                            LastName = "Aldebaran"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Gemini.Saga@GoldSaints.com",
                            EmployeeIdentityId = "cfa82a5b-2e3c-42b9-ade0-4abda5914de6",
                            FirstName = "Gemini",
                            LastName = "Saga"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Cancer.DeathMask@GoldSaints.com",
                            EmployeeIdentityId = "0009ced2-db4c-4e05-9459-e375bd2b06ff",
                            FirstName = "Cancer",
                            LastName = "DeathMask"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Leo.Aiolia@GoldSaints.com",
                            EmployeeIdentityId = "8c9019dc-ea34-4b05-871a-bcc3ce01633f",
                            FirstName = "Leo",
                            LastName = "Aiolia"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Virgo.Shaka@GoldSaints.com",
                            EmployeeIdentityId = "2035b55f-2d17-4b86-b729-906a3113f4c3",
                            FirstName = "Virgo",
                            LastName = "Shaka"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Libra.Dohko@GoldSaints.com",
                            EmployeeIdentityId = "d0b89c08-2bae-40af-9b50-f906cd7ddbdc",
                            FirstName = "Libra",
                            LastName = "Dohko"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Scorpio.Milo@GoldSaints.com",
                            EmployeeIdentityId = "81bc38d5-1bb1-4c61-bd9f-b074fcf50e74",
                            FirstName = "Scorpio",
                            LastName = "Milo"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Sagittarius.Aiolos@GoldSaints.com",
                            EmployeeIdentityId = "e6ba17d4-5712-418d-8e49-fe41ae74b043",
                            FirstName = "Sagittarius",
                            LastName = "Aiolos"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Capricorn.Shura@GoldSaints.com",
                            EmployeeIdentityId = "4200a89b-2aad-4b94-bb65-d131fe5b4000",
                            FirstName = "Capricorn",
                            LastName = "Shura"
                        },
                        new
                        {
                            Id = 11,
                            Email = "Aquarius.Camus@GoldSaints.com",
                            EmployeeIdentityId = "1e0ca156-a75f-48aa-8262-82fc1461461c",
                            FirstName = "Aquarius",
                            LastName = "Camus"
                        },
                        new
                        {
                            Id = 12,
                            Email = "Pisces.Aphrodite@GoldSaints.com",
                            EmployeeIdentityId = "2f793398-4c0c-4469-8002-a5905acd0136",
                            FirstName = "Pisces",
                            LastName = "Aphrodite"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Interview", b =>
                {
                    b.HasOne("ApplicationCore.Entities.InterviewTypeLookUp", "InterviewTypeLookUp")
                        .WithMany()
                        .HasForeignKey("InterviewTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterviewTypeLookUp");

                    b.Navigation("Interviewer");
                });
#pragma warning restore 612, 618
        }
    }
}
